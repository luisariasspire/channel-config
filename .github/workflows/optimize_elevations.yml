name: "Manual - Run optimize populate per pair pls/elevations"

concurrency: 1
on:
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment bundle'
        required: true
        default: 'staging'
        type: choice
        options:
          - staging
          - production
      bands:
        description: 'Band to run pairs'
        required: false
        default: 'both'
        type: choice
        options:
          - X
          - S
          - both
      gs_ids:
        description: 'Comma separated ground station IDs'
        required: false
        default: ''
        type: string


jobs:
  deploy:
    name: "Deploy bundle"
    runs-on: [ self-hosted ]

    steps:
      # Check out this repo, so that this workflow can access it.
      - uses: actions/checkout@v4
        with:
          # fetch the last 2 commits on the branch so we can tell what files changed
          ref: ${{ github.ref_name }}
          fetch-depth: 2

      - run: |-
          # Export Dashboards, create PR  
          dt=$(date +'%Y-%m-%d %H:%M:%S')
          # Install dependencies
          apt-get install jq
          pip install --upgrade pip poetry
          poetry install
        
          # Create unique branch name
          BRANCH_NAME="populate-per-pair-elevations-${{ github.run_id }}"
          git checkout -b $BRANCH_NAME
        
          # Commit and push changes
          git config --global user.email "github-actions@github.com"
          git config --global user.name "GitHub Actions"
          git add json
          git add yaml
          
          # Run optimize populate tool
          python populate_per_pair_elevations.py \
            -e ${{ github.event.inputs.environment }} \
            -g ${{ github.event.inputs.gs_ids }} \
            -b ${{ github.event.inputs.bands }}
          
          
          # Check if there are any changes to commit
          if ! git diff --staged --quiet; then
            echo "Changes detected, creating commit..."
            git commit -m "Per pair elevation optimization automated update - ${dt}"
            git push origin $BRANCH_NAME        
          else
            # 5.1. Do nothing
            echo "No changes detected, skipping commit"
          fi
        working-directory: bundles/Project Ripley/dashboards
        env:
          DATABRICKS_TOKEN: ${{ secrets.DATABRICKS_TOKEN }}

